 en
<h2><font size="4" color="#000000">Summary</font></h2>
<div>
<hr>
</div>
<div><font color="#9fc5e8" size="4"><br>
This class is the basic class which is used to make a request to Tumblr API.</font></div>
<div><font size="4"><font color="#9fc5e8">This class has two variables, which are RequestBuilder to perform the actual request and Stirng that store the apikey.</font></div>
<div><font color="#9fc5e8" size="4"><br>
</font></div>
<div><font color="#9fc5e8" size="4">
<div></div>
</font></div>
<div class="sites-codeblock sites-codesnippet-block">
<p class="sites-codesnippet-block" style="margin: 0px;"></p>
<div><font color="#9fc5e8" size="4">
<div><code>private RequestBuilder requestBuilder;</code></div>
<div><code>private String apiKey;</code></div>
</font></div>
<div></div>
</div>
<font color="#9fc5e8" size="4">
<div><font color="#9fc5e8" size="4"><br>
</font></div>
<br>
</font>
<div><font size="4" color="#000000">Constructor</font></div>
<div>
<hr>
</div>
<div><font color="#9fc5e8" size="4"><br>
This class has three constructors.<br>
<br>
</font></div>
<div><font color="#9fc5e8" size="4">The default constructor generates RequestBuilder newly and joins this JumblrClient together. <br>
This is called from other constructors inside.</font></div>
<div><font color="#9fc5e8" size="4"><br>
</font></div>
<div><font color="#9fc5e8" size="4">
<div></div>
<div class="sites-codeblock sites-codesnippet-block">
<p class="sites-codesnippet-block" style="margin: 0px;"></p>
<div><code>public JumblrClient() {</code></div>
<div><code>&nbsp; &nbsp; this.requestBuilder = new RequestBuilder(this);</code></div>
<div><code>}</code></div>
</div>
</font></div>
<div><font color="#9fc5e8" size="4"><br>
The second constructor takes consumerKey and consumerSecret. <br>
These two arguments are set in RequestBuilder. consumerKey is set as apikey.<br>
<br>
</font></div>
<div><font color="#9fc5e8" size="4">
<div></div>
<div class="sites-codeblock sites-codesnippet-block">
<p class="sites-codesnippet-block" style="margin: 0px;"></p>
<div><code>public JumblrClient(String consumerKey, String consumerSecret) {</code></div>
<div><code>&nbsp; &nbsp; this();</code></div>
<div><code>&nbsp; &nbsp; this.requestBuilder.setConsumer(consumerKey, consumerSecret);</code></div>
<div><code>&nbsp; &nbsp; this.apiKey = consumerKey;</code></div>
<div><code>}</code></div>
</div>
</font></div>
<div><font color="#9fc5e8" size="4"><br>
</font></div>
<div><font color="#9fc5e8" size="4">The third constructor takes consumerKey, consumerSecret, token and tokenSecret.</font></div>
<div><font color="#9fc5e8" size="4">The consumerKey and consumerSecret are used for calling the second constructer,<br>
  and token and tokenSecret are set by setToken method.</font></div>
<div><font color="#9fc5e8" size="4"><br>
</font></div>
<div><font color="#9fc5e8" size="4">
<div></div>
</font></div>
<div class="sites-codeblock sites-codesnippet-block">
<p class="sites-codesnippet-block" style="margin: 0px;"></p>
<div><font color="#9fc5e8" size="4">
<div><code>public JumblrClient(String consumerKey, String consumerSecret, String token, String tokenSecret) {</code></div>
<div><code>&nbsp; &nbsp; this(consumerKey, consumerSecret);</code></div>
<div><code>&nbsp; &nbsp; this.setToken(token, tokenSecret);</code></div>
<div><code>}</code></div>
</font></div>
<div></div>
</div>
<font color="#9fc5e8" size="4"><br>
</font>
<div><font color="#9fc5e8" size="4"><br>
</font></div>
<div><span style="color: rgb(0, 0, 0); font-size: large; line-height: 1.25;">Methods</span></div>
<div>
<hr>
</div>
<div><font color="#9fc5e8" size="4"><br>
It explains the method of jumblrClient on the following pages.</font></div>
 ----[split]----
 ja
<h2><font size="4" color="#000000">概要</font></h2>
<div>
<hr>
</div>
<div><font color="#9fc5e8" size="4"><br>
このクラスはTumblr APIへのリクエストを作成する為に使用される基本的なクラスです。</font></div>
<div><font size="4"><font color="#9fc5e8">このクラスは</font><span style="color:rgb(159,197,232);line-height:1.25">メンバ変数として</span><span style="color:rgb(159,197,232);line-height:1.25">実際のリクエスト処理を行うRequestBuilderクラスとapikeyを<br>
格納する為のStringクラスを持ちます。</span></font></div>
<div><font color="#9fc5e8" size="4"><br>
</font></div>
<div><font color="#9fc5e8" size="4">
<div></div>
</font></div>
<div class="sites-codeblock sites-codesnippet-block">
<p class="sites-codesnippet-block" style="margin: 0px;"></p>
<div><font color="#9fc5e8" size="4">
<div><code>private RequestBuilder requestBuilder;</code></div>
<div><code>private String apiKey;</code></div>
</font></div>
<div></div>
</div>
<font color="#9fc5e8" size="4">
<div><font color="#9fc5e8" size="4"><br>
</font></div>
<br>
</font>
<div><font size="4" color="#000000">コンストラクタ</font></div>
<div>
<hr>
</div>
<div><font color="#9fc5e8" size="4"><br>
コンストラクタは3つあります。<br>
<br>
</font></div>
<div><font color="#9fc5e8" size="4">引数なしのコンストラクタはRequestBuilderを新規に生成し、<br>
このJumblrClientを結びつけます。<br>
これは他のコンストラクタから内部で呼ばれています。</font></div>
<div><font color="#9fc5e8" size="4"><br>
</font></div>
<div><font color="#9fc5e8" size="4">
<div></div>
<div class="sites-codeblock sites-codesnippet-block">
<p class="sites-codesnippet-block" style="margin: 0px;"></p>
<div><code>public JumblrClient() {</code></div>
<div><code>&nbsp; &nbsp; this.requestBuilder = new RequestBuilder(this);</code></div>
<div><code>}</code></div>
</div>
</font></div>
<div><font color="#9fc5e8" size="4"><br>
2番目のコンストラクタはconsumerKeyとconsumerSecretを取ります。この2つの引数は<br>
RequestBuilderにセットされます。consumerKeyはapikeyとしてセットされます。<br>
<br>
</font></div>
<div><font color="#9fc5e8" size="4">
<div></div>
<div class="sites-codeblock sites-codesnippet-block">
<p class="sites-codesnippet-block" style="margin: 0px;"></p>
<div><code>public JumblrClient(String consumerKey, String consumerSecret) {</code></div>
<div><code>&nbsp; &nbsp; this();</code></div>
<div><code>&nbsp; &nbsp; this.requestBuilder.setConsumer(consumerKey, consumerSecret);</code></div>
<div><code>&nbsp; &nbsp; this.apiKey = consumerKey;</code></div>
<div><code>}</code></div>
</div>
</font></div>
<div><font color="#9fc5e8" size="4"><br>
</font></div>
<div><font color="#9fc5e8" size="4">3番目のコンストラクタはconsumerKeyとconsumerSecretとtokenとtokenSecretを取ります。</font></div>
<div><font color="#9fc5e8" size="4">consumerKeyとconsumerSecretは二番目のコンストラクタ呼び出しに用いられ、tokenと<br>
tokenSecretはsetTokenメソッドによってセットされます。</font></div>
<div><font color="#9fc5e8" size="4"><br>
</font></div>
<div><font color="#9fc5e8" size="4">
<div></div>
</font></div>
<div class="sites-codeblock sites-codesnippet-block">
<p class="sites-codesnippet-block" style="margin: 0px;"></p>
<div><font color="#9fc5e8" size="4">
<div><code>public JumblrClient(String consumerKey, String consumerSecret, String token, String tokenSecret) {</code></div>
<div><code>&nbsp; &nbsp; this(consumerKey, consumerSecret);</code></div>
<div><code>&nbsp; &nbsp; this.setToken(token, tokenSecret);</code></div>
<div><code>}</code></div>
</font></div>
<div></div>
</div>
<font color="#9fc5e8" size="4"><br>
</font>
<div><font color="#9fc5e8" size="4"><br>
</font></div>
<div><span style="color: rgb(0, 0, 0); font-size: large; line-height: 1.25;">メソッド</span></div>
<div>
<hr>
</div>
<div><font color="#9fc5e8" size="4"><br>
以下のページでjumblrClientクラスのメソッドについて説明します。</font></div>